@page "/offer"

@using Business.Abstract
@using Business.SingletonServices
@using CoreUI.Components.TabControl
@using CoreUI.Components.DataGrid
@using Entity
@using PSS.Data
@using PSS.PdfTemplate
@using QuestPDF.Fluent


@inject IOrderService orderService
@inject IClientCardService clientCardService
@inject NavigationManager navManager
@inject IJSRuntime JSRuntime
@inject FirmParameter firmParamService
<div class="container">
<div class="offer">
    <input class="btn btn-primary" type="button" value="Yeni Sipariş" onclick="@(()=>NewOrderButtonClick())" />
    <DataGrid TItem="OrdFiche" Items="ordFiches" @bind-SelectedItem="ordFiche" TotalCount="dataGridTotalCount" 
           Pager SelectedPageChange="@SelectedPageChange" RowCount="pageCount" RowsPerPage="RowCountChange" CurrentRow="currentrow" >
        <Columns>
            <Column Caption="Tarih" Field="@nameof(OrdFiche.Date_)" />
            <Column Caption="Müşteri Kodu">
                <CellTemplate>
                    @context.Item.ClientCode
                </CellTemplate>
            </Column>
            <Column Caption="Müşteri Unvan">
                <CellTemplate>
                    @clientCardService.GetByCode(@context.Item.ClientCode).Result.Name
                </CellTemplate>
            </Column>
            <Column Caption="Dokuman Kodu" Field="@nameof(OrdFiche.Docode)" />
            <Column Caption="Fiş No" Field="@nameof(OrdFiche.FicheNo)" />
            <Column Caption="Toplam" TextAlign="TextAlignmet.Right">
                <CellTemplate>
                    @context.Item.GrossTotal.ToString("N2")
                </CellTemplate>
            </Column>
            <Column Caption="Vergi" TextAlign="TextAlignmet.Right">
                <CellTemplate>
                    @context.Item.TotalVat.ToString("N2")
                </CellTemplate>
            </Column>
            <Column Caption="Genel Toplam" TextAlign="TextAlignmet.Right">
                <CellTemplate>
                    @context.Item.Total.ToString("N2")
                </CellTemplate>
            </Column>
            <Column Caption="Onay">
                <CellTemplate>
                    @(context.Item.Send == 1 ? "Onaylandı":"Onaylanmadı")
                </CellTemplate>
            </Column>
        </Columns>
        <ButtonRowTemplate>
            <input class="btn btn-primary" value="Değiştir" disabled="@(ordFiche == null ? true:false)" onclick="@ChangeOrdFiche" />
            <input class="btn btn-primary" value="Onay" disabled="@(ordFiche == null ? true:false)" onclick="@OrderOK" />
            <input class="btn btn-primary" value="PDF Oluştur" disabled="@(ordFiche == null ? true:false)" onclick="@ShowOrderForm" />
           
        </ButtonRowTemplate>
      
    </DataGrid>
</div>
<div class=""></div>
</div>

@code {
    [SupplyParameterFromQuery(Name ="page")]
    [Parameter] public int currentpage { get; set; }
    [SupplyParameterFromQuery(Name = "row")]
    [Parameter] public int currentrow { get; set; }
    [SupplyParameterFromQuery(Name = "id")]
    [Parameter] public Guid id{ get; set; }

    List<OrdFiche> ordFiches { get; set; }
    OrdFiche ordFiche { get; set; }
    int dataGridTotalCount;
    int pageCount = 20;

    private void NewOrderButtonClick()
    {
        navManager.NavigateTo("/OfferDetail", true);

    }
    private async void RowCountChange(int e)
    {
        pageCount = e;
        ordFiches = await orderService.GetOrderFiche(1, 0, pageCount);
    }

    private void OrderOK()
    {
        switch(ordFiche.Send)
        {
            case 0:
                {
                    ordFiche.Send = 1;
                    break;   
                }
            case 1:
                {
                    ordFiche.Send = 0;
                    break;
                }
        }
        orderService.Save(ordFiche);

    }

    private void ChangeOrdFiche()
    {
        navManager.NavigateTo($"/OfferDetail?id={ordFiche.Id}&row{currentrow}", true);
    }

    private async void SelectedPageChange(int value)
    {
        ordFiches = await orderService.GetOrderFiche(1, value, pageCount);
        StateHasChanged();
    }

    private async void ShowOrderForm()
    {
        OrderFormModel orderFormModel = new();
        orderFormModel.Client = await clientCardService.GetByCode(ordFiche.ClientCode);
        orderFormModel.OrdFiche = ordFiche;
        // orderFormModel.FirmParam = await firmParamService.GetAll();
        var document = new OfferDocument(orderFormModel);
        document.GeneratePdfAndShow();
    }

    protected async override void OnInitialized()
    {
        dataGridTotalCount =await orderService.GetOrderFicheCount(1);
        ordFiches = await orderService.GetOrderFiche(1, 0, pageCount);
        if(id != Guid.Empty)
        {
            ordFiche = ordFiches.FirstOrDefault(x => x.Id == id);
        }
      
    }


}
