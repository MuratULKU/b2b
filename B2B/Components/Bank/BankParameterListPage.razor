@using B2B.Components.Confirm
@using Business.Abstract;
@using Business.Concrete;
@using Entity;
@inject IBankParameterService bankParameterManager
@inject NavigationManager navManager

@if (BankId != Guid.Empty)
{
    <DataGrid TItem="BankParameter" Data="bankParameterList" SelectedRowChanged="selectRowChanged"
            ShowPager Responsive>
    <DataGridColumns>
        <DataGridCommandColumn />
        <DataGridColumn Field="@nameof(BankParameter.Key)" Caption="Parametre Id" />
        <DataGridColumn Field="@nameof(BankParameter.Value)" Caption="Parametre Değer" />
    </DataGridColumns>
    <ButtonRowTemplate>
        <Button Color="Blazorise.Color.Success" Clicked="newModal">Yeni</Button>
        <Button Color="Blazorise.Color.Primary" Disabled="selectedParameter == null" Clicked="changedModal">Değiştir</Button>
        <Button Color="Blazorise.Color.Danger" Disabled="selectedParameter == null" Clicked="delete">Sil</Button>
    </ButtonRowTemplate>

</DataGrid>
    <CascadingValue Value="this">
        <BankParameterAddModal @ref="modal" />
    </CascadingValue>
    <Confirm @ref="confirm" BodyText="@confirmMessage" ConfirmationChanged="deleteConfirm" />
}
@code {
    [Parameter] public Guid BankId { get; set; } //banka kartı referans olarak gönderilebilir.
    private List<BankParameter> bankParameterList;
    private BankParameterAddModal modal; //modal componentin çağırısı için sonra silinebilir.
    private BankParameter selectedParameter;
    private Confirm confirm;
    private string confirmMessage;

    protected override void OnParametersSet()
    {
        Reload();
    }

    public void Reload()
    {
        bankParameterList = bankParameterManager.GetAll(BankId);
        StateHasChanged();
    }

    private void selectRowChanged(BankParameter bankParameter)
    {
        selectedParameter = bankParameter;
    }

    private void newModal()
    {
        modal.bankParameter = null;
        modal.Modal.Open();
    }

    private void changedModal()
    {
        modal.bankParameter = selectedParameter;
        modal.Modal.Open();
    }
    private void delete()
    {
        confirmMessage = $"{selectedParameter.Key} {selectedParameter.Value} Kayıt Silinecektir. Onaylıyor musunuz?";
        confirm.Show();    
    }
    private void deleteConfirm(bool e)
    {
        if (e)
        {
            bankParameterManager.DeleteBankParameter(selectedParameter);
            Reload();
        }
    }
}
