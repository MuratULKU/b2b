
@implements IDisposable
@inject CartService cartPanel
@inject NavigationManager navManager
<style>
    .cart-icon {
       
        display: flex;
        flex-direction: row;
    }

    .cart-count {
        height: 25px;
        width: 25px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        bottom: 10px;
        left: -5px;
        position: relative;
        text-align: center;
    }
</style>

<div class="menu-text cart-icon" onclick="@onClickCartPanel">
    <svg xmlns="http://www.w3.org/2000/svg" width="32px" height="32px" viewBox="0 0 24 24"><path fill="currentColor" d="M17 18a2 2 0 0 1 2 2a2 2 0 0 1-2 2a2 2 0 0 1-2-2c0-1.11.89-2 2-2M1 2h3.27l.94 2H20a1 1 0 0 1 1 1c0 .17-.05.34-.12.5l-3.58 6.47c-.34.61-1 1.03-1.75 1.03H8.1l-.9 1.63l-.03.12a.25.25 0 0 0 .25.25H19v2H7a2 2 0 0 1-2-2c0-.35.09-.68.24-.96l1.36-2.45L3 4H1zm6 16a2 2 0 0 1 2 2a2 2 0 0 1-2 2a2 2 0 0 1-2-2c0-1.11.89-2 2-2m9-7l2.78-5H6.14l2.36 5z" /></svg>
</div>
<div class="cart-count">@_count</div>

@code {
    private int _count;

    protected override void OnInitialized()
    {
        cartPanel.CardChanged += OnCartChanged;
        base.OnInitialized();
    }

    private void OnCartChanged(object sender, CardEventArg args)
    {
      
        StateHasChanged();
    }

    private void onClickCartPanel()
    {
        navManager.NavigateTo("/cart");
    }

    public void Dispose()
    {
        cartPanel.CardChanged -= OnCartChanged;
    }
}
