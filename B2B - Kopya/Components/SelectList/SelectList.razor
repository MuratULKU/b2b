@using System.Linq.Expressions;
@typeparam TItem

<select class="form-select" value="@Selected" @onchange="Update">
    @if (Items != null)
    {
    @foreach (var item in Items)
    {
        <option value="@Text(item,ValueField)">@Text(item, DisplayField)</option>
    }
    }
</select>

@code {

    [Parameter, EditorRequired] public List<TItem> Items { get; set; }

    //[Parameter] public string Selected { get; set; }
    [Parameter] public object Selected { get; set; }
    [Parameter, EditorRequired] public string DisplayField { get; set; }
    [Parameter, EditorRequired] public string ValueField { get; set; }

    [Parameter] public EventCallback<object> SelectedChanged { get; set; }

    private async Task Update(ChangeEventArgs e)
    {
        await SelectedChanged.InvokeAsync(e.Value);
    }

    private string Text(TItem item, string columnName)
    {
        return item.GetType().GetProperty(columnName)
        .GetValue(item, null).ToString();
    }
}