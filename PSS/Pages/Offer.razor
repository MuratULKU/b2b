@page "/offer"

@using Business.Abstract
@using Business.SingletonServices
@using Core.Enum
@using CoreUI.Components.TabControl
@using CoreUI.Components.DataGrid
@using Entity
@using PSS.Data
@using PSS.PdfTemplate
@using QuestPDF.Fluent


@inject IOrderService orderService
@inject IClientCardService clientCardService
@inject NavigationManager navManager


@inject IDocumentNoService documentNoService

<div class="container">
    <div class="offer">
        <input class="btn btn-success" type="button" value="Yeni Sipariş" onclick="@(()=>NewOrderButtonClick())" />
        <input class="btn btn-danger" type="button" value="Değiştir" disabled="@((ordFiche == null || ordFiche?.Send != 0)? true:false)" onclick="@(()=>ChangeOrdFiche())" />
        <input class="btn btn-primary" type="button" value="Siparişe Çevir" disabled="@((ordFiche == null || ordFiche?.Send != 0) ? true:false)" onclick="@(()=>OrderOK())" />
        <input class="btn btn-secondary" type="button" value="Yazdır" disabled="@(ordFiche == null? true:false)" onclick="@(()=>ShowOrderForm())" />
        <DataGrid TItem="OrdFiche" Items="ordFiches" @bind-SelectedItem="ordFiche" TotalCount="dataGridTotalCount"
                  Pager SelectedPageChange="@SelectedPageChange" RowCount="pageCount" RowsPerPage="RowCountChange" CurrentRow="currentrow">
            <Columns>
                <Column Caption="Tarih" Field="@nameof(OrdFiche.Date_)" />
                <Column Caption="Müşteri Kodu">
                    <CellTemplate>
                        @context.Item.ClientCode
                    </CellTemplate>
                </Column>
                <Column Caption="Müşteri Unvan">
                    <CellTemplate>
                        @clientCardService.GetByCode(@context.Item.ClientCode).Result.Name
                    </CellTemplate>
                </Column>
                <Column Caption="Plasiyer Kodu">
                    <CellTemplate>
                        @context.Item.User.AccountName
                    </CellTemplate>
                </Column>
                <Column Caption="Fiş No" Field="@nameof(OrdFiche.FicheNo)" />
                <Column Caption="Toplam" TextAlign="TextAlignmet.Right">
                    <CellTemplate>
                        @context.Item.GrossTotal.ToString("N2")
                    </CellTemplate>
                </Column>
                <Column Caption="Vergi" TextAlign="TextAlignmet.Right">
                    <CellTemplate>
                        @context.Item.TotalVat.ToString("N2")
                    </CellTemplate>
                </Column>
                <Column Caption="Genel Toplam" TextAlign="TextAlignmet.Right">
                    <CellTemplate>
                        @context.Item.Total.ToString("N2")
                    </CellTemplate>
                </Column>
                <Column Caption="Onay">
                    <CellTemplate>
                        @((OrderState)context.Item.Send)
                    </CellTemplate>
                </Column>
            </Columns>


        </DataGrid>
    </div>
    <div class=""></div>
</div>

@code {
    [SupplyParameterFromQuery(Name = "page")]
    [Parameter] public int currentpage { get; set; }
    [SupplyParameterFromQuery(Name = "row")]
    [Parameter] public int currentrow { get; set; }
    [SupplyParameterFromQuery(Name = "id")]
    [Parameter] public Guid id { get; set; }

    List<OrdFiche> ordFiches { get; set; } = default!;
    OrdFiche ordFiche { get; set; } = default!;
    int dataGridTotalCount;
    int pageCount = 20;

    private void NewOrderButtonClick()
    {
        navManager.NavigateTo("/OfferDetail", true);

    }
    private async void RowCountChange(int e)
    {
        pageCount = e;
        ordFiches = await orderService.GetOrderFiche(3, 0, pageCount);
    }

    private async void OrderOK()
    {
        ordFiche.TrCode = 1;
        ordFiche.FicheNo = ((await documentNoService.GetDocNo(2)) + "-" + ordFiche.FicheNo);
        await orderService.Save(ordFiche);
        dataGridTotalCount = await orderService.GetOrderFicheCount(3);
        ordFiches = await orderService.GetOrderFiche(3, 0, pageCount);
    }

    private void ChangeOrdFiche()
    {
        navManager.NavigateTo($"/OfferDetail?id={ordFiche.Id}&row{currentrow}", true);
    }

    private async void SelectedPageChange(int value)
    {
        ordFiches = await orderService.GetOrderFiche(3, value, pageCount);
        StateHasChanged();
    }

    private async void ShowOrderForm()
    {
        OrderFormModel orderFormModel = new();
        if (ordFiche != null || ordFiche?.ClientCode != null)
        {
            orderFormModel.Client = await clientCardService.GetByCode(ordFiche.ClientCode);
            orderFormModel.OrdFiche = ordFiche;
            // orderFormModel.FirmParam = await firmParamService.GetAll();
            var document = new OfferDocument(orderFormModel);
            document.GeneratePdfAndShow();
        }
    }

    protected async override void OnInitialized()
    {
        dataGridTotalCount = await orderService.GetOrderFicheCount(3);
        ordFiches = await orderService.GetOrderFiche(3, 0, pageCount);
        if (id != Guid.Empty)
        {
            ordFiche = ordFiches.FirstOrDefault(x => x.Id == id) ?? new();
        }

    }


}
