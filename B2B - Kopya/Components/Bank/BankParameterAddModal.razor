@using B2B.Components.Confirm
@using B2B.Components.SanalMagazaUI.Modal
@using Business.Abstract;
@using Entity;
@inject IVirtualPosParameterService bankParamaterService

<UIModal @ref="Modal" Closed="closedModal">
    <Title>SanalPos Banka Parametreleri</Title>
    <Body>
        <div class="row my-3">
            <div class="col-5 px-3"><label>Parametre Adı </label></div>
            <div class="col-7 px-3"><input class="form-control" type="text" @bind-value="parameterKey" /></div>
        </div>
        <div class="row my-3">
            <div class="col-5 px-3"><label>Parametre Değeri </label></div>
            <div class="col-7 px-3"><input class="form-control" type="text" @bind-value="parameterValue" /></div>
        </div>
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" onclick="@ClickCancel">Vazgeç</button>
        <button type="button" class="btn btn-primary" onclick="@(Close)">Kaydet</button>
    </Footer>
</UIModal>
<Confirm @ref="confirm"/> 
@code {
    public UIModal Modal { get; set; }
    [CascadingParameter] public BankParameterListPage bankParameterListPage { get; set; }

    public VirtualPosParameter bankParameter;
    private Confirm? confirm;
    private string? parameterKey;
    private string? parameterValue;
    private void Close()
    {
        Modal.OnClosing = true;
        if (bankParameter == null || bankParameter?.Id == Guid.Empty)
        {
            bankParameter = new VirtualPosParameter(parameterKey, parameterValue);
            bankParameter.BankCardId = bankParameterListPage.BankId;
            bankParameter.Id = Guid.NewGuid();
            bankParamaterService.CreateBankParameter(VirtualPosParameter);
        }
        else
        {
            bankParameter.Key = parameterKey;
            bankParameter.Value = parameterValue;
            bankParameter.BankCardId = bankParameterListPage.BankId;
            bankParamaterService.UpdateBankParameter(bankParameter);
        }
        Modal.Close();
    }

    private async  void ClickCancel()
    {
        var con = await confirm.ShowAsync();
        if(con)
        {
            Modal.OnClosing = true;
            Modal.Close();
        }
    }

    

    private void closedModal()
    {
        bankParameterListPage.Reload();
    }

    protected override void OnParametersSet()
    {
        if (bankParameter != null)
        {
            parameterKey = bankParameter.Key;
            parameterValue = bankParameter.Value;
        }
        else
        {
            parameterKey = string.Empty;
            parameterValue = string.Empty;
        }
    }
    
}